// Generated by CoffeeScript 2.0.0-beta9-dev
var concat, foldl, fs, humanReadable, numberLines, Preprocessor, runMain, selectinputSource;
fs = require('fs');
Preprocessor = require('./preprocessor').Preprocessor;
cache$ = require('./helpers');
numberLines = cache$.numberLines;
humanReadable = cache$.humanReadable;
runMain = require('./run').runMain;
cache$1 = require('./functional-helpers');
concat = cache$1.concat;
foldl = cache$1.foldl;
selectinputSource = function (options) {
  if (null != options.input) {
    return fs.realpathSync(options.input);
  } else {
    return options.cli && '(cli)' || '(stdin)';
  }
};
module.exports = function (input, options, err) {
  var fragmenter, fragments, inputName, inputObj, inputSource, jsCodeGen, output, parse, preprocessed, result, sourceObj;
  if (null != err)
    throw err;
  result = null;
  inputName = null != options.input ? options.input : options.cli && 'cli' || 'stdin';
  inputSource = selectinputSource(options);
  input = input.toString();
  if (65279 === input.charCodeAt(0))
    input = input.slice(1);
  if (options.debug)
    try {
      console.error('### PREPROCESSED CS ###');
      preprocessed = Preprocessor.process(input, { literate: options.literate });
      console.error(numberLines(humanReadable(preprocessed)));
    } catch (e$) {
    }
  if (options.fragmented) {
    fragmenter = require('./cli-fragmenter');
    fragments = fragmenter(input);
    options.parts = { prepend: fragments.js };
    output = require('./cli-output')(options);
    input = fragments.ember;
  } else {
    output = require('./cli-output')('', options);
  }
  parse = require('./cli-parser');
  inputObj = {
    inputSource: inputSource,
    input: input
  };
  sourceObj = parse(inputObj, output, options);
  if (typeof sourceObj === 'object') {
    sourceObj.inputName = inputName;
    sourceObj.inputSource = inputSource;
    jsCodeGen = require('./cli-js-codegen');
    return jsCodeGen(sourceObj, input, options);
  }
};
